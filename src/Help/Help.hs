
-- This file has been automatically generated using HelpGen.hs.

module Help (lookupHelp) where

import InterPrintUtils (terminalAddCentreHighlightedTitle)
lookupHelp :: String -> Maybe [String]
lookupHelp s = case s of
  "introduction" -> Just introductionHelp
  "navigation"   -> Just navigationHelp
  "options"      -> Just optionsHelp
  _ -> Nothing


optionsHelp :: [String]
optionsHelp  = terminalAddCentreHighlightedTitle "Options"
  [ "navigation"
  , "options"
  ]

navigationHelp :: [String]
navigationHelp  = ["<TO-DO>"]

introductionHelp :: [String]
introductionHelp  = terminalAddCentreHighlightedTitle "Introduction"
  [ "\ESC[1mOVERVIEW\ESC[m"
  , "    "
  , "The University of Nottingham Improvement Engine (Unie) is an interactive tool "
  , "that supports inequational reasoning about program time efficiency in a "
  , "call-by-need setting. More specifically, the system mechanically supports "
  , "constructing proofs of program improvement based on the theoretic work of "
  , "improvement theory, first introduced by Andrew Moran and David Sands in the 90s."
  , "    "
  , "An article that introduces this system and reviews the technical details of"
  , "improvement theory can be found at the following address: "
  , "    "
  , "  \ESC[1mhttp://www.cs.nott.ac.uk/~psxmah/improving.pdf\ESC[m"
  , "    "
  , "\ESC[1mQUICK INTRODUCTION\ESC[m"
  , "    "
  , "In short, improvement proofs are constructed via a sequence of program "
  , "transformations that follow the typical calculational style. For example, if we "
  , "wish to prove that a term N is a time improvement over a term M, written M \8819 N, "
  , "then, by starting at M, we aim to apply a sequence of program transformations "
  , "and arrive at N. However, each transformation we apply must imply the"
  , "improvement relation \8819 in order for the calculation to be logically correct."
  , "    "
  , "As an example, let us prove that \10004x \8819 x interactively. When Unie is first "
  , "loaded, we arrive at a welcome screen that prompts us for input. By entering the"
  , "following command and parameters, we can enter the system's 'transformation' "
  , "mode in which we can construct our desired improvement proof."
  , "    "
  , "  unie> trans $`x$ IMP $x$"
  , "    "
  , "In doing so, we receive the following response:"
  , "    "
  , "   Global relation set: \8819"
  , "   Transformation goal set: x"
  , "    "
  , "  Info: transformation started."
  , "  \10004x"
  , "    "
  , "The command we entered not only instructs the system to enter its transformation "
  , "mode, but also specifies our desired proof statement \10004x \8819 x. This statement"
  , "enables Unie to instantiate a number of its proof settings. Specifically, the "
  , "transformation goal x is used to notify us when the proof is complete, and the "
  , "global relation \8819 is used to prevent any invalid transformations (i.e., those "
  , "whose operators do not imply \8819) from being applied."
  , "    "
  , "We are now greeted with a different command prompt:"
  , "    "
  , "  [1]>"
  , "    "
  , "This prompt appears each time the system enters its transformation mode, and "
  , "indicates the current proof state. As we have just initiated the proof, we are "
  , "in the first proof state."
  , "    "
  , "From the definition of tick \10004 and the improvement relation \8819, we know that "
  , "removing a tick is an improvement. Thus we can apply a rule to remove the tick:"
  , "    "
  , "  [1]> tick-elim"
  , "  Info: transformation goal reached!"
  , "  \8819 x"
  , "    "
  , "By entering this command, not only have we removed the tick and improved the "
  , "term, we have also arrived at our transformation goal. The proof is complete."
  , "    "
  , "We may often wish to review each step in a complete improvement proof, or the "
  , "previous steps in a proof currently under construction. We can do this as "
  , "follows."
  , "    "
  , "  [2]> show-hist"
  , "    "
  , "  Transformation history:"
  , "    "
  , "        { trans $ \10004x $ IMP $ x $ }"
  , "   \10004x"
  , "      \8819 { tick-elim }"
  , "   x"
  , "    "
  , "Here we can see that the transformation's history is presented in the style of a"
  , "mathematical proof, with the hints between each step corresponding to the "
  , "command and parameters that were entered to advance to the next proof state."
  , "    "
  , "\ESC[1mKEY INFORMATION\ESC[m"
  , "    "
  , "In order to adequately support mechanising improvement proofs, the system "
  , "provides a wide range of features. These include: navigating through terms in "
  , "order to apply transformations to specific subterms; importing definitions into "
  , "the system's library to transform or to provide as arguments to transformation "
  , "commands; scripting transformations in order to reuse them modularly; generating"
  , "program contexts to be used in conjunction with transformation commands; "
  , "revisiting previous proof states."
  , "    "
  , "To describe in detail the usage and significance of the above features (and "
  , "others), we provide a separate help file for each. These can be accessed by "
  , "specifying the appropriate feature name as a parameter to the help command. For "
  , "example, enter the following command to learn about navigating through terms:"
  , "    "
  , "  unie> help navigation"
  , "    "
  , "To see a complete list of all help options, use:"
  , "    "
  , "  unie> help options"
  , "    "
  , "\ESC[1mABOUT\ESC[m"
  , "    "
  , "The University of Nottingham Improvement Engine was designed and implemented by "
  , "Martin A.T. Handley, a second year PhD student at the University of Nottingham."
  , "If you would like to get in touch with him, feel free to send an email to the"
  , "following address:"
  , "    "
  , "  \ESC[1mmartin.handley@nottingham.ac.uk\ESC[m"
  , "    "
  , "Alternatively, you may wish to review his academic profile:"
  , "    "
  , "  \ESC[1mhttp://www.cs.nott.ac.uk/~psxmah/\ESC[m"
  , "    "
  , "Thank you."
  , "    "
  , "  \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m      \ESC[m \ESC[48;5;255m  \ESC[m \ESC[48;5;255m      \ESC[m   "
  , "  \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m    "
  , "  \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m \ESC[48;5;255m      \ESC[m "
  , "  \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m    \ESC[48;5;255m  \ESC[m"
  , "  \ESC[48;5;255m      \ESC[m \ESC[48;5;255m  \ESC[m  \ESC[48;5;255m  \ESC[m \ESC[48;5;255m  \ESC[m \ESC[48;5;255m      \ESC[m"
  , "  \ESC[38;5;255m_.-\"/______________////_\ESC[m"
  , "  \ESC[38;5;255m`'-.\\--------------\\\\\\\\\"\ESC[m"
  ]
